# Generated by Django 2.0.5 on 2018-05-25 15:15

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SmbUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=100)),
                ('language_preference', models.CharField(choices=[('en', 'English'), ('it', 'Italian')], default='en', max_length=20)),
                ('sub', models.TextField(blank=True, help_text='The OpenID Direct subject. This is the effective user identifier in the authentication provider. This attribute is required by other smb apps, it is not used by smb-portal')),
                ('cognito_user_status', models.BooleanField(default=True, help_text='This attribute is required by other smb apps, it is not used by smb-portal')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EndUserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(choices=[('female', 'female'), ('male', 'male')], max_length=20)),
                ('phone_number', models.IntegerField(blank=True, null=True)),
                ('bio', models.TextField(help_text='Short user biography')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MobilityHabitsSurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_answered', models.DateTimeField(auto_now_add=True)),
                ('public_transport_usage', models.CharField(choices=[('frequent', 'Habitual (more than 10 travels per month)'), ('occasional', 'Occasional (once per month)'), ('rare', 'Rare (less than 10 travels per year)'), ('never', 'Never')], max_length=100)),
                ('uses_bike_sharing_services', models.BooleanField(default=False)),
                ('uses_electrical_car_sharing_services', models.BooleanField(default=False)),
                ('uses_fuel_car_sharing_services', models.BooleanField(default=False)),
                ('bicycle_usage', models.CharField(choices=[('frequent', 'Habitual (at least once a week on average)'), ('occasional', 'Habitual (at least once a month)'), ('seasonal', 'Seasonal (mainly used in the Summer)'), ('rare', 'Rare (less than once a month)'), ('never', 'Never use a bicycle to move around in the city')], max_length=100)),
                ('end_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='profiles.EndUserProfile')),
            ],
        ),
    ]
