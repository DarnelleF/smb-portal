# Generated by Django 2.0 on 2018-05-22 23:42

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number_of_badges', models.IntegerField()),
                ('type_of_badge', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'positions',
            },
        ),
        migrations.CreateModel(
            name='Prize',
            fields=[
                ('prize_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PrizeandBadges',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('badge_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.Badge')),
                ('prize_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.Prize')),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.TextField(unique=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('given_name', models.TextField(blank=True, null=True)),
                ('family_name', models.TextField(blank=True, null=True)),
                ('preferred_username', models.TextField(blank=True, null=True)),
                ('cognito_user_status', models.NullBooleanField(db_column='cognito:user_status')),
                ('status', models.TextField(blank=True, null=True)),
                ('sub', models.TextField()),
                ('id', models.BigAutoField(primary_key=True, serialize=False, unique=True)),
                ('field_id', models.UUIDField(blank=True, db_column='_id', null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserHabits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_transportaion', models.IntegerField()),
                ('customer_sharing', models.IntegerField()),
                ('bicycle_usuage', models.IntegerField()),
            ],
        ),
        migrations.AddField(
            model_name='receipt',
            name='owner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.User'),
        ),
        migrations.AddField(
            model_name='prize',
            name='prizemanager_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registration.User'),
        ),
        migrations.AlterUniqueTogether(
            name='user',
            unique_together={('username', 'sub')},
        ),
    ]
